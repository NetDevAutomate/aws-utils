#!/bin/bash

# Create VPC and Subnets as defined in a config file.
#
# Sample config file (subnets.cfg)
# ----
# # VPC CIDR - must come before the subnets, last field = "VPC"
# # CIDR		NAME	"VPC"
# 192.168.0.0/21	my-vpc	VPC
#
# # Subnets specifications within the above VPC
# # CIDR		NAME	AZ
# 192.168.0.0/24	web-a	ap-southeast-2a
# 192.168.1.0/24	web-b	ap-southeast-2b
# 192.168.2.0/24	app-a	ap-southeast-2a
# 192.168.3.0/24	app-b	ap-southeast-2b
# ----
#
# Usage: create-vpc-subnets subnets.cfg
#
# It is safe to re-run the command at any time (e.g. to create more subnets)
# and it won't break the existing ones.

# Author: Michael Ludvig <michael.ludvig@enterpriseit.co.nz>

function show_help() {
	cat << __EOF__
Usage: $0 -c CONFIG [-p PROFILE] [-h]

Create VPC and Subnets as defined in a config file.

   -c CONFIG    Name of the config file with VPC and Subnet definitions.

   -p PROFILE   AWS-CLI Profile name as defined in ~/.aws/config.
                Optional, will use default or instance meta-data if
                not specified.

   -h           Display help.

__EOF__
	exit 1
}

function fatal() {
	echo $1 >&2
	exit 1
}

function create_vpc() {
	CIDR="$1"
	NAME="$2"
	VPC_ID=$(${AWS} ec2 describe-vpcs --filters "Name=cidr,Values=${CIDR}" | jq -r '.Vpcs[0].VpcId')
	if [ "${VPC_ID:0:4}" != "vpc-" ]; then
		# VPC with this CIDR doesn't yet exist - create new
		VPC_ID=$(${AWS} ec2 create-vpc --cidr-block ${CIDR} | jq -r '.Vpc.VpcId')
		${AWS} ec2 create-tags --resources "${VPC_ID}" --tags Key=Name,Value="${NAME}"
	fi
	test "${VPC_ID:0:4}" = "vpc-" || fatal "Can't figure out VPC_ID for ${CIDR}"

	while test $(${AWS} ec2 describe-vpcs --filters "Name=vpc-id,Values=${VPC_ID}" | jq -r '.Vpcs[0].State') != "available"; do
		sleep 1
	done
	echo ${VPC_ID}
}

AWS=$(which aws 2>/dev/null)

test -z "${AWS}" && fatal "The 'aws' utility not found. Please install it or add its location to \$PATH"

while getopts "c:p:h" OPT; do
	case "${OPT}" in
	c)
		CONFIG="${OPTARG}"
		;;
	p)
		AWS="${AWS} --profile=${OPTARG}"
		;;
	h)
		show_help
		;;
	esac
done

test -z "${CONFIG}" && fatal "No config file provided. Please use '-c /path/to/subnets.cfg' or -h for help."

echo "Getting ready, this may take a while..."

${AWS} ec2 describe-vpcs > /dev/null || fatal "AWS access failed. Verify your profile ('-p PROFILE') or use -h for help."

while read CIDR NAME AZ; do
	test "${CIDR:0:1}" = '#' -o -z "${CIDR}" && continue
	if [ "${AZ}" = "VPC" ]; then
		VPC_ID=$(create_vpc ${CIDR} "${NAME}")
		echo "VPC: ${CIDR} = ${VPC_ID}"
		continue
	fi
	test "${VPC_ID:0:4}" = "vpc-" || fatal "Unknown VPC_ID. Please fix the config file."

	NEW=""
	SUBNET_ID=$(${AWS} ec2 describe-subnets --filters "Name=cidr,Values=${CIDR}" | jq -r '.Subnets[0].SubnetId')
	if [ "${SUBNET_ID:0:7}" != "subnet-" ]; then
		SUBNET_ID=$(${AWS} ec2 create-subnet --vpc-id ${VPC_ID} --cidr-block ${CIDR} --availability-zone ${AZ} | jq -r '.Subnet.SubnetId')
		${AWS} ec2 create-tags --resources "${SUBNET_ID}" --tags Key=Name,Value="${NAME}"
		NEW="(new)"
	fi
	if [ "${SUBNET_ID:0:7}" != "subnet-" ]; then
		echo "Can't figure out SUBNET_ID for ${CIDR}" >&2
	fi
	echo "Subnet: ${CIDR} = ${SUBNET_ID} [${NAME}] ${NEW}"
done < "${CONFIG}"
