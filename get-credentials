#!/usr/bin/env python3

# By Michael Ludvig <mludvig@logix.net.nz> (c) 2017
# License: GPLv3

# Simple script that retrieves AWS credentials (access key,
# secret key and possibly security token) from any avaiable
# source:
# - Environment variables
# - ~/.aws/config or ~/.aws/credentials (including cross-account)
# - EC2 IAM Role
# - ...
# See http://boto3.readthedocs.io/en/latest/guide/configuration.html

import sys
import argparse
import boto3

# Boto3 1.4.x or newer required
(ver_major, ver_minor, ver_patch) = boto3.__version__.split('.')
if int(ver_major)*100 + int(ver_minor) < 104:
    sys.exit("ERROR: Boto3 1.4.x or newer is required")

parser = argparse.ArgumentParser(
    description='Retrieve AWS credentials from any available source',
    epilog='Visit https://aws.nz/aws-utils/get-credentials for more info and usage examples.')
parser.add_argument('--profile', dest='profile', type=str, help='Configuration profile from ~/.aws/credentials or ~/.aws/config')
parser.add_argument('--region', dest='region', type=str, help='Set / override AWS region.')
args = parser.parse_args()

if args.profile:
    print("export AWS_PROFILE={}".format(args.profile))

session = boto3.session.Session(profile_name=args.profile, region_name=args.region)
if session.region_name:
    print("export AWS_DEFAULT_REGION={}".format(session.region_name))

credentials = session.get_credentials()
if not credentials:
    sys.exit("ERROR: Unable to locate credentials from any source.")

print("export AWS_ACCESS_KEY_ID={}".format(credentials.access_key))
print("export AWS_SECRET_ACCESS_KEY={}".format(credentials.secret_key))
if credentials.token:
    print("export AWS_SESSION_TOKEN={}".format(credentials.token))

print("export _GET_CREDENTIALS_METHOD_USED={}".format(credentials.method))
