#!/bin/bash

# By Michael Ludvig <mludvig@logix.net.nz> (c) 2015
# License: GPLv3

# Obtain temporary cross-account or cross-role credentials from STS
# Enables scripts running on an EC2 instance with instance-role access
# to other roles or other AWS accounts.
# Cross-role access must be configured first.

ROLES_CSV="roles.csv"

ROLE_NAME=$1
if [ -z "${ROLE_NAME}" ]; then
	echo "Usage: $0 [--list|<role-name>]" >&2
	echo "See ${ROLES_CSV} for the roles details" >&2
	exit 1
fi

if [ "x${ROLE_NAME}" == "x--list" ]; then
	awk -F\| 'NR>1{print $1}' ${ROLES_CSV}
	exit
fi

REGION="ap-southeast-2"

set -e
unset AWS_ACCESS_KEY_ID
unset AWS_SECRET_ACCESS_KEY
unset AWS_SESSION_TOKEN

eval $(awk -F\| -v role=${ROLE_NAME} -v retval=1 -v IGNORECASE=1 'NR==1{split($0, varnames);} NR>1 && $1 == role{ for (nf=1; nf<=NF; nf++) { print "export VAR_" varnames[nf] "=" $nf } retval=0} END{exit retval}' ${ROLES_CSV})

if [ -z "${VAR_ARN}" ]; then
	echo "Role '${ROLE_NAME}' not found in ${ROLES_CSV}. Try: $0 --list" >&2
	exit 1
fi

aws sts assume-role --role-arn ${VAR_ARN} --role-session-name ${ROLE_NAME} --duration-seconds 900 | jq -r '
	@text "export AWS_ACCESS_KEY_ID=\"\(.Credentials.AccessKeyId)\"",
	@text "export AWS_SECRET_ACCESS_KEY=\"\(.Credentials.SecretAccessKey)\"",
	@text "export AWS_SESSION_TOKEN=\"\(.Credentials.SessionToken)\""
'
